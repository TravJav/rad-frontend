version: 2.1

executors:
  python_executor:
    docker:
      - image: circleci/node:latest

jobs:
  build:
    executor: python_executor
    working_directory: ~/app
    steps:
      - checkout
      # Enable Docker-in-Docker (DinD)
      - setup_remote_docker:
          version: 20.10.14

      # Install necessary packages
      - run:
          name: Install necessary packages
          command: |
            sudo apt-get update \
              && sudo apt-get -y install \
                gcc \
                python3-dev \
                libpcre3 \
                libpcre3-dev \
                libpq-dev \
                tox \
                postgresql-server-dev-all \
              && pip install -U --no-cache-dir pip poetry \
              && pip install lockfile \
              && pip install Flask \
              && pip install python-dotenv

      - run:
          name: Create working directory
          command: mkdir -p /home/circleci/app

      - run:
          name: Change working directory
          command: cd /home/circleci/app

      - run:
          name: Set environment variables
          command: |
            echo "DB_HOST=invictusdb.c18a4i83deqo.us-east-2.rds.amazonaws.com" >> $BASH_ENV
            echo "DB_PORT=5432" >> $BASH_ENV
            echo "DB_NAME=jefe" >> $BASH_ENV
            echo "DB_USER=jefe" >> $BASH_ENV
            echo "DB_PASSWORD=$DB_PASSWORD" >> $BASH_ENV
            # Add other environment variables here...

      - run:
          name: Create application directory
          command: mkdir -p /home/circleci/app

      - restore_cache:
          keys:
            - v1-{{ .Branch }}-
            - v1-

      - run:
          name: Debug
          command: ls

      - run:
          name: Build Container
          command: |
            ./scripts/build_container.sh

      - run:
          name: Launch Container
          command: |
            set -x
            echo "Starting Docker Compose Up"
            docker-compose up -d
            echo "Docker Compose Up completed"
            echo "List images by name"
            docker ps
            set +x

      - run:
          name: Check for build logs
          command: |
            set -x
            echo "Logs Start"
            docker logs app_api-data-science_1
            echo "Logs End"
            docker ps
            set +x
      - run:
          name: Run Tests
          command: |
            set -x
            docker exec -it app_api-data-science_1 ./scripts/run-tests.sh
            set +x

      - run:
          name: Debug
          command: pwd

      - run:
          name: Fix permissions
          command: sudo chown -R circleci:circleci /home/circleci/


      # Install the AWS CLI (if not already available in the chosen CircleCI Docker image)
      - run:
          name: Install AWS CLI
          command: sudo apt-get install -y awscli

      # Authenticate with ECR
      - run:
          name: Authenticate with ECR
          command: |
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set AWS_SECRET_ACCESS_KEY $SECRET_ACCESS_KEY
            aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 692482025845.dkr.ecr.us-east-1.amazonaws.com
            

      # Build the Docker image and tag it with the ECR repository URI
      - run:
          name: Build and Tag Docker Image
          command: |
            ./scripts/build_container.sh
            docker tag datascience-backend:latest 692482025845.dkr.ecr.us-east-1.amazonaws.com/datasceince-backend:latest

          
      # Push Docker Image to ECR
      - run:
          name: Push Docker Image to ECR
          command: |
            docker push 692482025845.dkr.ecr.us-east-1.amazonaws.com/datasceince-backend:latest
            docker tag datascience-backend:latest 692482025845.dkr.ecr.us-east-1.amazonaws.com/datasceince-backend:latest